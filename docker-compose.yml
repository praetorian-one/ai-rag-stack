version: '3.8'

services:
  # üß† Ollama: Local LLM model host
  # - Loads GGUF or native models from ${MODEL_PATH} (NFS-mounted NAS)
  # - Exposes API on port 11434 for local inference
  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ${MODEL_PATH}:/root/.ollama/models:ro  # Set in .env for NFS mount
    restart: unless-stopped

  # üß± Qdrant: Vector database for document embeddings
  # - Stores vectorized content from ingested documents
  # - Accessible to RAG agent for similarity search
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    restart: unless-stopped

  # ü§ñ RAG Agent: Core backend that connects Ollama + Qdrant
  # - Accepts user queries and performs RAG via API
  # - Sends queries to Ollama and fetches context from Qdrant
  rag-agent:
    build: ./rag-agent
    container_name: rag-agent
    ports:
      - "8082:8000"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    depends_on:
      - ollama
      - qdrant
    restart: unless-stopped

  # üìÑ RAG Ingestor: Watches `./documents` and auto-ingests new files
  # - Uses Nomic embeddings to vectorize content
  # - Pushes vectors to Qdrant
  rag-ingestor:
    build: ./rag-ingestor
    container_name: rag-ingestor
    volumes:
      - ./documents:/app/documents
    depends_on:
      - qdrant
    restart: unless-stopped

  # üßæ RAG Uploader: Web form for uploading files to ingest
  # - Exposes an HTML upload page on port 8081
  # - Files are saved to `./documents`, picked up by `rag-ingestor`
  rag-uploader:
    build: ./rag-uploader
    container_name: rag-uploader
    ports:
      - "8081:8080"
    volumes:
      - ./documents:/uploads
    restart: unless-stopped

  # üåê RAG UI: React-based frontend for querying RAG stack
  # - Web interface on port 3000
  # - Sends API queries to `rag-agent`
  rag-ui:
    build: ./rag-ui
    container_name: rag-ui
    ports:
      - "3000:3000"
    environment:
      - RAG_AGENT_URL=http://rag-agent:8000
    depends_on:
      - rag-agent
    restart: unless-stopped

volumes:
  ollama_data:       # Local volume (currently unused ‚Äî model data now on NFS)
  qdrant_storage:    # Persistent Qdrant vector DB storage
